<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- ==========================================================  -->
<!-- Configuration for MyBatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>iwallet-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>iwallet</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>iwallet-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author zhyang                                                                -->
<!-- ============================================================================= -->

<!-- ==========================================================  -->
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的 -->
<!-- 例如namespace="com.jvv.dal.mapper.TbLoginMapper"就是com.jvv.dal.mapper(包名)+ TbLoginMapper( TbLoginMapperMapper.xml文件去除-mapping.xml) -->
<!-- ==========================================================  -->
<mapper namespace="com.heitian.ssm.dao.TbLoginMapper">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->
    <!-- result maps for database table tb_login -->
    <resultMap id="tbLoginDO" type="com.heitian.ssm.model.TbLoginDO">
        <id  property="id" column="id" javaType="java.lang.Long" jdbcType="INTEGER"/>
        <result  property="phone" column="phone" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="password" column="password" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="lastLoginTime" column="last_login_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result  property="lastLoginAddress" column="last_login_address" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="loginNumber" column="login_number" javaType="java.lang.Long" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="tbLoginDO_Columns">
        tbLogin.id,
        tbLogin.phone,
        tbLogin.password,
        tbLogin.last_login_time,
        tbLogin.last_login_address,
        tbLogin.login_number
    </sql>
    <!-- ============================================= -->
    <!-- mapped statements for TbLoginMapper -->
    <!-- ============================================= -->

    <!-- mapped statement for TbLoginMapper.insert -->
    <insert id="insert">
        <selectKey order="AFTER" resultType="java.lang.Long" keyProperty="tbLogin.id">
            SELECT LAST_INSERT_ID() 
        </selectKey>
        INSERT INTO tb_login
        (
            phone,
            password,
            last_login_time,
            last_login_address,
            login_number
        )VALUES(
            #{tbLogin.phone,jdbcType=VARCHAR},
            #{tbLogin.password,jdbcType=VARCHAR},
            #{tbLogin.lastLoginTime,jdbcType=TIMESTAMP,javaType=java.util.Date},
            #{tbLogin.lastLoginAddress,jdbcType=VARCHAR},
            #{tbLogin.loginNumber,jdbcType=INTEGER,javaType=java.lang.Long}
        )
    </insert>


    <!-- mapped statement for TbLoginMapper.query -->
    <select id="query" resultMap="tbLoginDO">
                        SELECT 
                    <include refid="tbLoginDO_Columns"/>
                FROM tb_login tbLogin
                <where>
                    <if test="tbLogin.id!=null " >
                        AND id = #{tbLogin.id,jdbcType=INTEGER,javaType=java.lang.Long} 
                    </if>
                    <if test="tbLogin.phone!=null  and tbLogin.phone!='' " >
                        AND phone = #{tbLogin.phone,jdbcType=VARCHAR} 
                    </if>
                    <if test="tbLogin.password!=null  and tbLogin.password!='' " >
                        AND password = #{tbLogin.password,jdbcType=VARCHAR} 
                    </if>
                    <if test="tbLogin.lastLoginTime!=null " >
                        AND last_login_time = #{tbLogin.lastLoginTime,jdbcType=TIMESTAMP,javaType=java.util.Date} 
                    </if>
                    <if test="tbLogin.lastLoginAddress!=null  and tbLogin.lastLoginAddress!='' " >
                        AND last_login_address = #{tbLogin.lastLoginAddress,jdbcType=VARCHAR} 
                    </if>
                    <if test="tbLogin.loginNumber!=null " >
                        AND login_number = #{tbLogin.loginNumber,jdbcType=INTEGER,javaType=java.lang.Long} 
                    </if>
                </where>
                ORDER BY id DESC 
        LIMIT #{start},#{pageSize}
    </select>
            
    <!-- mapped statement for TbLoginMapper.queryCount -->
    <select id="queryCount" resultType="long">
        SELECT COUNT(id) 
        FROM tb_login tbLogin
        <where>
            <if test="tbLogin.id!=null " >
                AND id = #{tbLogin.id,jdbcType=INTEGER,javaType=java.lang.Long} 
            </if>
            <if test="tbLogin.phone!=null  and tbLogin.phone!='' " >
                AND phone = #{tbLogin.phone,jdbcType=VARCHAR} 
            </if>
            <if test="tbLogin.password!=null  and tbLogin.password!='' " >
                AND password = #{tbLogin.password,jdbcType=VARCHAR} 
            </if>
            <if test="tbLogin.lastLoginTime!=null " >
                AND last_login_time = #{tbLogin.lastLoginTime,jdbcType=TIMESTAMP,javaType=java.util.Date} 
            </if>
            <if test="tbLogin.lastLoginAddress!=null  and tbLogin.lastLoginAddress!='' " >
                AND last_login_address = #{tbLogin.lastLoginAddress,jdbcType=VARCHAR} 
            </if>
            <if test="tbLogin.loginNumber!=null " >
                AND login_number = #{tbLogin.loginNumber,jdbcType=INTEGER,javaType=java.lang.Long} 
            </if>
        </where>

    </select>
            
    <!-- mapped statement for TbLoginMapper.update -->
    <update id="update">
        UPDATE tb_login
        <set>
            <if test="tbLogin.phone!=null  and tbLogin.phone!='' " >
                phone = #{tbLogin.phone,jdbcType=VARCHAR} ,
            </if>
            <if test="tbLogin.password!=null  and tbLogin.password!='' " >
                password = #{tbLogin.password,jdbcType=VARCHAR} ,
            </if>
            <if test="tbLogin.lastLoginTime!=null " >
                last_login_time = #{tbLogin.lastLoginTime,jdbcType=TIMESTAMP,javaType=java.util.Date} ,
            </if>
            <if test="tbLogin.lastLoginAddress!=null  and tbLogin.lastLoginAddress!='' " >
                last_login_address = #{tbLogin.lastLoginAddress,jdbcType=VARCHAR} ,
            </if>
            <if test="tbLogin.loginNumber!=null " >
                login_number = #{tbLogin.loginNumber,jdbcType=INTEGER,javaType=java.lang.Long} ,
            </if>
        </set>
        WHERE 
            id = #{tbLogin.id,jdbcType=INTEGER,javaType=java.lang.Long}

    </update>

    <!-- mapped statement for TbLoginMapper.delete -->
    <delete id="delete">
        <![CDATA[
        delete from tb_login where (id = #{id, jdbcType=INTEGER})
        ]]>
    </delete>

    <!-- mapped statement for TbLoginMapper.findById -->
    <select id="findById" resultMap="tbLoginDO">
        SELECT 
        <include refid="tbLoginDO_Columns"/>
        FROM tb_login tbLogin
        WHERE 
            id = #{id,jdbcType=INTEGER,javaType=java.lang.Long}

    </select>
            
    <!-- mapped statement for TbLoginMapper.findByIdIn -->
    <select id="findByIdIn" resultMap="tbLoginDO">
        SELECT 
        <include refid="tbLoginDO_Columns"/>
        FROM tb_login tbLogin
        WHERE 
            id IN 
             <foreach collection="idList" item="item"  open="(" separator="," close=")"> 
                 #{item} 
             </foreach> 

    </select>
            
</mapper>
