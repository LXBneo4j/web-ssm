<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- ==========================================================  -->
<!-- Configuration for MyBatis sqlmap mapping.                    -->
<!-- ==========================================================  -->

<!-- ============================================================================= -->
<!-- This file is generated by <tt>iwallet-dalgen</tt>, a DAL (Data Access Layer)  -->
<!-- code generation utility specially developed for <tt>iwallet</tt> project.     -->
<!--                                                                               -->
<!-- PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may be     -->
<!-- OVERWRITTEN by someone else. To modify the file, you should go to directory   -->
<!-- <tt>(project-home)/biz/dal/src/conf/dalgen</tt>, and find the corresponding   -->
<!-- configuration files. Modify those files according to your needs, then run     -->
<!-- <tt>iwallet-dalgen</tt> to generate this file.                                -->
<!--                                                                               -->
<!-- @author zhyang                                                                -->
<!-- ============================================================================= -->

<!-- ==========================================================  -->
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的 -->
<!-- 例如namespace="com.jvv.dal.mapper.TbLogMapper"就是com.jvv.dal.mapper(包名)+ TbLogMapper( TbLogMapperMapper.xml文件去除-mapping.xml) -->
<!-- ==========================================================  -->
<mapper namespace="com.heitian.ssm.dao.TbLogMapper">
    <!-- ============================================= -->
    <!-- RESULT MAPS                                   -->
    <!-- ============================================= -->
    <!-- result maps for database table tb_log -->
    <resultMap id="tbLogDO" type="com.heitian.ssm.model.TbLogDO">
        <id  property="id" column="id" javaType="java.lang.Long" jdbcType="INTEGER"/>
        <result  property="name" column="name" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="content" column="content" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="logNumber" column="log_number" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="checkUser" column="check_user" javaType="java.lang.Long" jdbcType="INTEGER"/>
        <result  property="checkUsername" column="check_username" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="checkTime" column="check_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result  property="state" column="state" javaType="java.lang.Long" jdbcType="INTEGER"/>
        <result  property="remark" column="remark" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result  property="creator" column="creator" javaType="java.lang.Long" jdbcType="INTEGER"/>
        <result  property="updater" column="updater" javaType="java.lang.Long" jdbcType="INTEGER"/>
        <result  property="createTime" column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result  property="updateTime" column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="tbLogDO_Columns">
        tbLog.id,
        tbLog.name,
        tbLog.content,
        tbLog.log_number,
        tbLog.check_user,
        tbLog.check_username,
        tbLog.check_time,
        tbLog.state,
        tbLog.remark,
        tbLog.creator,
        tbLog.updater,
        tbLog.create_time,
        tbLog.update_time
    </sql>
    <!-- ============================================= -->
    <!-- mapped statements for TbLogMapper -->
    <!-- ============================================= -->

    <!-- mapped statement for TbLogMapper.insert -->
    <insert id="insert">
        <selectKey order="AFTER" resultType="java.lang.Long" keyProperty="tbLog.id">
            SELECT LAST_INSERT_ID() 
        </selectKey>
        INSERT INTO tb_log
        (
            name,
            content,
            log_number,
            check_user,
            check_username,
            check_time,
            state,
            remark,
            creator,
            updater,
            create_time,
            update_time
        )VALUES(
            #{tbLog.name,jdbcType=VARCHAR},
            #{tbLog.content,jdbcType=VARCHAR},
            #{tbLog.logNumber,jdbcType=VARCHAR},
            #{tbLog.checkUser,jdbcType=INTEGER,javaType=java.lang.Long},
            #{tbLog.checkUsername,jdbcType=VARCHAR},
            #{tbLog.checkTime,jdbcType=TIMESTAMP,javaType=java.util.Date},
            #{tbLog.state,jdbcType=INTEGER,javaType=java.lang.Long},
            #{tbLog.remark,jdbcType=VARCHAR},
            #{tbLog.creator,jdbcType=INTEGER,javaType=java.lang.Long},
            #{tbLog.updater,jdbcType=INTEGER,javaType=java.lang.Long},
            #{tbLog.createTime,jdbcType=TIMESTAMP,javaType=java.util.Date},
            #{tbLog.updateTime,jdbcType=TIMESTAMP,javaType=java.util.Date}
        )
    </insert>


    <!-- mapped statement for TbLogMapper.query -->
    <select id="query" resultMap="tbLogDO">
                        SELECT 
                    <include refid="tbLogDO_Columns"/>
                FROM tb_log tbLog
                <where>
                    <if test="tbLog.id!=null " >
                        AND id = #{tbLog.id,jdbcType=INTEGER,javaType=java.lang.Long} 
                    </if>
                    <if test="tbLog.name!=null  and tbLog.name!='' " >
                        AND name = #{tbLog.name,jdbcType=VARCHAR} 
                    </if>
                    <if test="tbLog.content!=null  and tbLog.content!='' " >
                        AND content = #{tbLog.content,jdbcType=VARCHAR} 
                    </if>
                    <if test="tbLog.logNumber!=null  and tbLog.logNumber!='' " >
                        AND log_number = #{tbLog.logNumber,jdbcType=VARCHAR} 
                    </if>
                    <if test="tbLog.checkUser!=null " >
                        AND check_user = #{tbLog.checkUser,jdbcType=INTEGER,javaType=java.lang.Long} 
                    </if>
                    <if test="tbLog.checkUsername!=null  and tbLog.checkUsername!='' " >
                        AND check_username = #{tbLog.checkUsername,jdbcType=VARCHAR} 
                    </if>
                    <if test="tbLog.checkTime!=null " >
                        AND check_time = #{tbLog.checkTime,jdbcType=TIMESTAMP,javaType=java.util.Date} 
                    </if>
                    <if test="tbLog.state!=null " >
                        AND state = #{tbLog.state,jdbcType=INTEGER,javaType=java.lang.Long} 
                    </if>
                    <if test="tbLog.remark!=null  and tbLog.remark!='' " >
                        AND remark = #{tbLog.remark,jdbcType=VARCHAR} 
                    </if>
                    <if test="tbLog.creator!=null " >
                        AND creator = #{tbLog.creator,jdbcType=INTEGER,javaType=java.lang.Long} 
                    </if>
                    <if test="tbLog.updater!=null " >
                        AND updater = #{tbLog.updater,jdbcType=INTEGER,javaType=java.lang.Long} 
                    </if>
                    <if test="tbLog.createTime!=null " >
                        AND create_time = #{tbLog.createTime,jdbcType=TIMESTAMP,javaType=java.util.Date} 
                    </if>
                    <if test="tbLog.updateTime!=null " >
                        AND update_time = #{tbLog.updateTime,jdbcType=TIMESTAMP,javaType=java.util.Date} 
                    </if>
                </where>
                ORDER BY id DESC 
        LIMIT #{start},#{pageSize}
    </select>
            
    <!-- mapped statement for TbLogMapper.queryCount -->
    <select id="queryCount" resultType="long">
        SELECT COUNT(id) 
        FROM tb_log tbLog
        <where>
            <if test="tbLog.id!=null " >
                AND id = #{tbLog.id,jdbcType=INTEGER,javaType=java.lang.Long} 
            </if>
            <if test="tbLog.name!=null  and tbLog.name!='' " >
                AND name = #{tbLog.name,jdbcType=VARCHAR} 
            </if>
            <if test="tbLog.content!=null  and tbLog.content!='' " >
                AND content = #{tbLog.content,jdbcType=VARCHAR} 
            </if>
            <if test="tbLog.logNumber!=null  and tbLog.logNumber!='' " >
                AND log_number = #{tbLog.logNumber,jdbcType=VARCHAR} 
            </if>
            <if test="tbLog.checkUser!=null " >
                AND check_user = #{tbLog.checkUser,jdbcType=INTEGER,javaType=java.lang.Long} 
            </if>
            <if test="tbLog.checkUsername!=null  and tbLog.checkUsername!='' " >
                AND check_username = #{tbLog.checkUsername,jdbcType=VARCHAR} 
            </if>
            <if test="tbLog.checkTime!=null " >
                AND check_time = #{tbLog.checkTime,jdbcType=TIMESTAMP,javaType=java.util.Date} 
            </if>
            <if test="tbLog.state!=null " >
                AND state = #{tbLog.state,jdbcType=INTEGER,javaType=java.lang.Long} 
            </if>
            <if test="tbLog.remark!=null  and tbLog.remark!='' " >
                AND remark = #{tbLog.remark,jdbcType=VARCHAR} 
            </if>
            <if test="tbLog.creator!=null " >
                AND creator = #{tbLog.creator,jdbcType=INTEGER,javaType=java.lang.Long} 
            </if>
            <if test="tbLog.updater!=null " >
                AND updater = #{tbLog.updater,jdbcType=INTEGER,javaType=java.lang.Long} 
            </if>
            <if test="tbLog.createTime!=null " >
                AND create_time = #{tbLog.createTime,jdbcType=TIMESTAMP,javaType=java.util.Date} 
            </if>
            <if test="tbLog.updateTime!=null " >
                AND update_time = #{tbLog.updateTime,jdbcType=TIMESTAMP,javaType=java.util.Date} 
            </if>
        </where>

    </select>
            
    <!-- mapped statement for TbLogMapper.update -->
    <update id="update">
        UPDATE tb_log
        <set>
            <if test="tbLog.name!=null  and tbLog.name!='' " >
                name = #{tbLog.name,jdbcType=VARCHAR} ,
            </if>
            <if test="tbLog.content!=null  and tbLog.content!='' " >
                content = #{tbLog.content,jdbcType=VARCHAR} ,
            </if>
            <if test="tbLog.logNumber!=null  and tbLog.logNumber!='' " >
                log_number = #{tbLog.logNumber,jdbcType=VARCHAR} ,
            </if>
            <if test="tbLog.checkUser!=null " >
                check_user = #{tbLog.checkUser,jdbcType=INTEGER,javaType=java.lang.Long} ,
            </if>
            <if test="tbLog.checkUsername!=null  and tbLog.checkUsername!='' " >
                check_username = #{tbLog.checkUsername,jdbcType=VARCHAR} ,
            </if>
            <if test="tbLog.checkTime!=null " >
                check_time = #{tbLog.checkTime,jdbcType=TIMESTAMP,javaType=java.util.Date} ,
            </if>
            <if test="tbLog.state!=null " >
                state = #{tbLog.state,jdbcType=INTEGER,javaType=java.lang.Long} ,
            </if>
            <if test="tbLog.remark!=null  and tbLog.remark!='' " >
                remark = #{tbLog.remark,jdbcType=VARCHAR} ,
            </if>
            <if test="tbLog.creator!=null " >
                creator = #{tbLog.creator,jdbcType=INTEGER,javaType=java.lang.Long} ,
            </if>
            <if test="tbLog.updater!=null " >
                updater = #{tbLog.updater,jdbcType=INTEGER,javaType=java.lang.Long} ,
            </if>
            <if test="tbLog.createTime!=null " >
                create_time = #{tbLog.createTime,jdbcType=TIMESTAMP,javaType=java.util.Date} ,
            </if>
            <if test="tbLog.updateTime!=null " >
                update_time = #{tbLog.updateTime,jdbcType=TIMESTAMP,javaType=java.util.Date} ,
            </if>
        </set>
        WHERE 
            id = #{tbLog.id,jdbcType=INTEGER,javaType=java.lang.Long}

    </update>

    <!-- mapped statement for TbLogMapper.delete -->
    <delete id="delete">
        <![CDATA[
        delete from tb_log where (id = #{id, jdbcType=INTEGER})
        ]]>
    </delete>

    <!-- mapped statement for TbLogMapper.findById -->
    <select id="findById" resultMap="tbLogDO">
        SELECT 
        <include refid="tbLogDO_Columns"/>
        FROM tb_log tbLog
        WHERE 
            id = #{id,jdbcType=INTEGER,javaType=java.lang.Long}

    </select>
            
    <!-- mapped statement for TbLogMapper.findByIdIn -->
    <select id="findByIdIn" resultMap="tbLogDO">
        SELECT 
        <include refid="tbLogDO_Columns"/>
        FROM tb_log tbLog
        WHERE 
            id IN 
             <foreach collection="idList" item="item"  open="(" separator="," close=")"> 
                 #{item} 
             </foreach> 

    </select>
            
</mapper>
